version: '3'

services: 

  nats-server:
    image: nats:latest
    ports:
      - 8222:8222

  client-gateway:
    build: ./client-gateway
    ports:
      - ${CLIENT_GATEWAY_PORT}:3000
    volumes:
      - ./client-gateway/src:/usr/src/app/src
    command: npm run start:dev
    environment:
      - PORT=3000
      - NATS_SERVERS=nats://nats-server:4222

  products-ms:
    build: ./products-ms
    volumes:
      - ./products-ms/src:/usr/src/app/src
    command: npm run start:dev
    environment:
      - PORT=3001
      - NATS_SERVERS=nats://nats-server:4222
      - DATABASE_URL=file:./dev.db

  orders-ms:
    depends_on:
      orders-db:
        condition: service_healthy
    build: ./orders-ms
    volumes:
      - ./orders-ms/src:/usr/src/app/src
    command: npm run start:dev
    environment:
      - PORT=3002
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@orders-db:5432/${POSTGRES_DB}?schema=public
      - NATS_SERVERS=nats://nats-server:4222

  orders-db:
    image: postgres:16.2
    container_name: orders_database
    restart: always
    ports:
      - 5432:5432
    volumes:
      - ./orders-ms/postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d ordersdb"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ====================== #
  # Payments microservices #
  # ====================== #
  payments-ms:

    build: ./payments-ms
    volumes:
      - ./payments-ms/src:/usr/src/app/src
    command: npm run start:dev
    ports:
      - ${PAYMENT_MS_PORT}:${PAYMENT_MS_PORT}
    environment:
      - PORT=3003
      - NATS_SERVERS=nats://nats-server:4222
      - PAYMENTS_PORT=${PAYMENTS_PORT}
      - STRIPE_SUCCESS_URL=${STRIPE_SUCCESS_URL}
      - STRIPE_CANCEL_URL=${STRIPE_CANCEL_URL}
      - STRIPE_SECRET=${STRIPE_SECRET}
      - ENDPOINT_SECRET_HOOKDECK=${ENDPOINT_SECRET_HOOKDECK}